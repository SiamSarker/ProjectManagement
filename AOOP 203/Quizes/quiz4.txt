Server: The server has a file that contains the data of multiple students. Each student should have at least 4 fields including name and id. 
The server accepts 4 types of requests. 
The first one is for searching a student with a specific id. If the data of the student with the given id is found in the server file, then that data is sent to the client.  Otherwise the server sends data not found to client.
For the second request, the server adds a new student data to the already existing file. The data of the new student is sent by the client.
For the third request, the server removes a student data with a specific id from the server file. The id is sent by the client.
For the fourth request, the server updates a student data with a new data (remove and add). The data of the new student (with the id) is sent by the client.

Client: The client should be able to send all the 4 requests to the server. For the first request (Searching) the server also sends data back to the client.




// Server code

public class StudentAccount {
    int id;
    String name;
    double marks;
    double cgpa;

    public StudentAccount(int id, String name, double marks, double cgpa) {
        this.id = id;
        this.name = name;
        this.marks = marks;
        this.cgpa = cgpa;
    }
}

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;

public class Server {
    public static void main(String[] args) {
        ArrayList<StudentAccount> studentAccounts = new ArrayList<>();
        try {

            Scanner sc = new Scanner(new File("Data/A.txt"));
            while (sc.hasNext()){
                StudentAccount account = new StudentAccount(sc.nextInt(), sc.next(), sc.nextDouble(), sc.nextDouble());
                studentAccounts.add(account);
            }

            ServerSocket serverSocket = new ServerSocket(123);
            System.out.println("Waiting for client");
            Socket socket = serverSocket.accept();
            System.out.println("Connected to Client");

            InputStreamReader isr = new InputStreamReader(socket.getInputStream());
            BufferedReader reader = new BufferedReader(isr);


            OutputStreamWriter o = new OutputStreamWriter(socket.getOutputStream());
            BufferedWriter writer = new BufferedWriter(o);


            int value = Integer.parseInt(reader.readLine());

            // 1. for search
            if (value == 1) {
                int flag = 0;
                int matchId = Integer.parseInt(reader.readLine());
                for (StudentAccount b : studentAccounts) {
                    if (b.id == matchId) {
                        // send the values to the cliient
                        flag++;
                        writer.write(b.id + " " + b.name + " " + b.marks + " " + b.cgpa + "\n");
                        writer.flush();
                        break;
                    }
                }
                if (flag == 0){
                    writer.write("Data not Found" + "\n");
                    writer.flush();
                }

            }


            else if (value == 2) {
                // 2.  Add

                StudentAccount NewAc = new StudentAccount(Integer.parseInt(reader.readLine()), reader.readLine(), Double.parseDouble(reader.readLine()), Double.parseDouble(reader.readLine()));
                studentAccounts.add(NewAc);
                BufferedWriter writeFile = new BufferedWriter(new FileWriter("Data/A.txt"));
                for (StudentAccount b : studentAccounts) {
                    String s = b.id + " " + b.name + " " + b.marks + " " + b.cgpa + "\n";
                    writeFile.write(s);
                }
                writeFile.close();
                //  added successfully
            }

            //  3. Remove object by the given ID

            else if (value == 3) {

                int flag = 0;
                int matchId = Integer.parseInt(reader.readLine());
                int count = 0;
                for (StudentAccount b : studentAccounts) {
                    if (b.id == matchId) {
                        // send the values to the cliient
                        flag++;
                        break;
                    }
                    count++;
                }
                if (flag > 0)
                    studentAccounts.remove(count);

                BufferedWriter writeFile = new BufferedWriter(new FileWriter("Data/A.txt"));
                for (StudentAccount b : studentAccounts) {
                    String s = b.id + " " + b.name + " " + b.marks + " " + b.cgpa + "\n";
                    writeFile.write(s);
                }
                writeFile.close();

                //  hopefully will work
            }

            //  4.  update a student information

            else if (value == 4) {
                int matchId = Integer.parseInt(reader.readLine()); // given id
                String name = reader.readLine();
                double marks = Double.parseDouble(reader.readLine());
                double cgpa = Double.parseDouble(reader.readLine());

                for (StudentAccount b : studentAccounts) {
                    if (b.id == matchId) {
                        b.name = name;
                        b.marks = marks;
                        b.cgpa = cgpa;
                        break;
                    }
                }
                BufferedWriter writeFile = new BufferedWriter(new FileWriter("Data/A.txt"));
                for (StudentAccount b : studentAccounts) {
                    String s = b.id + " " + b.name + " " + b.marks + " " + b.cgpa + "\n";
                    writeFile.write(s);
                }
                writeFile.close();

            }

            }catch (Exception e)
        {
            e.printStackTrace();
        }
    }
}




//  Client code

import java.io.*;
import java.net.Socket;
import java.util.Scanner;

public class Client {
    public static void main(String[] args) {

        try {
            Socket socket = new Socket("127.0.0.1", 123);

            InputStreamReader isr = new InputStreamReader(socket.getInputStream());
            BufferedReader reader = new BufferedReader(isr);

            OutputStreamWriter o = new OutputStreamWriter(socket.getOutputStream());
            BufferedWriter writer = new BufferedWriter(o);

            Scanner sc = new Scanner(System.in);

            System.out.println("Press 1 for student ID data\nPress 2 for Add new Account\nPress 3 for remove an ID\nPress 4 for Update a ID data");
            int flag = sc.nextInt();
            sc.nextLine();
            if (flag == 1) {
                String id = sc.nextLine();
                writer.write(id);
                writer.flush();

                String line = reader.readLine() + "\n";
                System.out.println(line);
            }
            else if (flag == 2) {
                writer.write("2");
                writer.flush();
                System.out.println("ID: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
                System.out.println("Name: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
                System.out.println("Marks: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
                System.out.println("CGPA: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
            }
            else if (flag == 3){
                writer.write("3");
                writer.flush();
                String id = sc.nextLine();
                writer.write(id);
                writer.flush();
            }
            else if (flag == 4)
            {
                writer.write("4");
                writer.flush();
                writer.write(sc.nextInt()+"");
                writer.flush();
                System.out.println("Updated Name: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
                System.out.println("Updated Marks: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();
                System.out.println("Updated CGPA: ");
                writer.write(sc.nextLine()+"\n");
                writer.flush();

            }
            else
                System.out.println("Wrong Input\n");


        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
